/*
 * aiproductdataenhancer/service.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets aiproductdataenhancerToneType
 */
@JsonAdapter(AiproductdataenhancerToneType.Adapter.class)
public enum AiproductdataenhancerToneType {
  
  UNKNOWN("TONE_TYPE_UNKNOWN"),
  
  FORMAL("TONE_TYPE_FORMAL"),
  
  CASUAL("TONE_TYPE_CASUAL"),
  
  PERSUASIVE("TONE_TYPE_PERSUASIVE"),
  
  INFORMATIVE("TONE_TYPE_INFORMATIVE"),
  
  INSPIRATIONAL("TONE_TYPE_INSPIRATIONAL"),
  
  AUTHORITATIVE("TONE_TYPE_AUTHORITATIVE"),
  
  PLAYFUL("TONE_TYPE_PLAYFUL"),
  
  EMPATHETIC("TONE_TYPE_EMPATHETIC"),
  
  SALES_ORIENTED("TONE_TYPE_SALES_ORIENTED"),
  
  TECHNICAL("TONE_TYPE_TECHNICAL"),
  
  SOPHISTICATED("TONE_TYPE_SOPHISTICATED"),
  
  URGENT("TONE_TYPE_URGENT"),
  
  FRIENDLY("TONE_TYPE_FRIENDLY"),
  
  PROFESSIONAL("TONE_TYPE_PROFESSIONAL"),
  
  HUMOROUS("TONE_TYPE_HUMOROUS");

  private String value;

  AiproductdataenhancerToneType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static AiproductdataenhancerToneType fromValue(String value) {
    for (AiproductdataenhancerToneType b : AiproductdataenhancerToneType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<AiproductdataenhancerToneType> {
    @Override
    public void write(final JsonWriter jsonWriter, final AiproductdataenhancerToneType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public AiproductdataenhancerToneType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return AiproductdataenhancerToneType.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    AiproductdataenhancerToneType.fromValue(value);
  }
}

